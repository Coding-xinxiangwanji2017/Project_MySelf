--lpm_decode DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 8.0 cbx_cycloneii 2008:02:23:252825 cbx_lpm_add_sub 2008:03:09:257947 cbx_lpm_compare 2008:02:23:252825 cbx_lpm_decode 2008:02:23:252825 cbx_mgl 2008:04:11:273944 cbx_stratix 2008:02:23:252825 cbx_stratixii 2008:02:23:252825  VERSION_END


-- Copyright (C) 1991-2008 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_g57
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode2324w[1..0]	: WIRE;
	w_anode2333w[3..0]	: WIRE;
	w_anode2350w[3..0]	: WIRE;
	w_anode2360w[3..0]	: WIRE;
	w_anode2370w[3..0]	: WIRE;
	w_anode2380w[3..0]	: WIRE;
	w_anode2390w[3..0]	: WIRE;
	w_anode2400w[3..0]	: WIRE;
	w_anode2410w[3..0]	: WIRE;
	w_anode2422w[1..0]	: WIRE;
	w_anode2429w[3..0]	: WIRE;
	w_anode2440w[3..0]	: WIRE;
	w_anode2450w[3..0]	: WIRE;
	w_anode2460w[3..0]	: WIRE;
	w_anode2470w[3..0]	: WIRE;
	w_anode2480w[3..0]	: WIRE;
	w_anode2490w[3..0]	: WIRE;
	w_anode2500w[3..0]	: WIRE;
	w_data2322w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode2500w[3..3], w_anode2490w[3..3], w_anode2480w[3..3], w_anode2470w[3..3], w_anode2460w[3..3], w_anode2450w[3..3], w_anode2440w[3..3], w_anode2429w[3..3]), ( w_anode2410w[3..3], w_anode2400w[3..3], w_anode2390w[3..3], w_anode2380w[3..3], w_anode2370w[3..3], w_anode2360w[3..3], w_anode2350w[3..3], w_anode2333w[3..3]));
	w_anode2324w[] = ( (w_anode2324w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2333w[] = ( (w_anode2333w[2..2] & (! w_data2322w[2..2])), (w_anode2333w[1..1] & (! w_data2322w[1..1])), (w_anode2333w[0..0] & (! w_data2322w[0..0])), w_anode2324w[1..1]);
	w_anode2350w[] = ( (w_anode2350w[2..2] & (! w_data2322w[2..2])), (w_anode2350w[1..1] & (! w_data2322w[1..1])), (w_anode2350w[0..0] & w_data2322w[0..0]), w_anode2324w[1..1]);
	w_anode2360w[] = ( (w_anode2360w[2..2] & (! w_data2322w[2..2])), (w_anode2360w[1..1] & w_data2322w[1..1]), (w_anode2360w[0..0] & (! w_data2322w[0..0])), w_anode2324w[1..1]);
	w_anode2370w[] = ( (w_anode2370w[2..2] & (! w_data2322w[2..2])), (w_anode2370w[1..1] & w_data2322w[1..1]), (w_anode2370w[0..0] & w_data2322w[0..0]), w_anode2324w[1..1]);
	w_anode2380w[] = ( (w_anode2380w[2..2] & w_data2322w[2..2]), (w_anode2380w[1..1] & (! w_data2322w[1..1])), (w_anode2380w[0..0] & (! w_data2322w[0..0])), w_anode2324w[1..1]);
	w_anode2390w[] = ( (w_anode2390w[2..2] & w_data2322w[2..2]), (w_anode2390w[1..1] & (! w_data2322w[1..1])), (w_anode2390w[0..0] & w_data2322w[0..0]), w_anode2324w[1..1]);
	w_anode2400w[] = ( (w_anode2400w[2..2] & w_data2322w[2..2]), (w_anode2400w[1..1] & w_data2322w[1..1]), (w_anode2400w[0..0] & (! w_data2322w[0..0])), w_anode2324w[1..1]);
	w_anode2410w[] = ( (w_anode2410w[2..2] & w_data2322w[2..2]), (w_anode2410w[1..1] & w_data2322w[1..1]), (w_anode2410w[0..0] & w_data2322w[0..0]), w_anode2324w[1..1]);
	w_anode2422w[] = ( (w_anode2422w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2429w[] = ( (w_anode2429w[2..2] & (! w_data2322w[2..2])), (w_anode2429w[1..1] & (! w_data2322w[1..1])), (w_anode2429w[0..0] & (! w_data2322w[0..0])), w_anode2422w[1..1]);
	w_anode2440w[] = ( (w_anode2440w[2..2] & (! w_data2322w[2..2])), (w_anode2440w[1..1] & (! w_data2322w[1..1])), (w_anode2440w[0..0] & w_data2322w[0..0]), w_anode2422w[1..1]);
	w_anode2450w[] = ( (w_anode2450w[2..2] & (! w_data2322w[2..2])), (w_anode2450w[1..1] & w_data2322w[1..1]), (w_anode2450w[0..0] & (! w_data2322w[0..0])), w_anode2422w[1..1]);
	w_anode2460w[] = ( (w_anode2460w[2..2] & (! w_data2322w[2..2])), (w_anode2460w[1..1] & w_data2322w[1..1]), (w_anode2460w[0..0] & w_data2322w[0..0]), w_anode2422w[1..1]);
	w_anode2470w[] = ( (w_anode2470w[2..2] & w_data2322w[2..2]), (w_anode2470w[1..1] & (! w_data2322w[1..1])), (w_anode2470w[0..0] & (! w_data2322w[0..0])), w_anode2422w[1..1]);
	w_anode2480w[] = ( (w_anode2480w[2..2] & w_data2322w[2..2]), (w_anode2480w[1..1] & (! w_data2322w[1..1])), (w_anode2480w[0..0] & w_data2322w[0..0]), w_anode2422w[1..1]);
	w_anode2490w[] = ( (w_anode2490w[2..2] & w_data2322w[2..2]), (w_anode2490w[1..1] & w_data2322w[1..1]), (w_anode2490w[0..0] & (! w_data2322w[0..0])), w_anode2422w[1..1]);
	w_anode2500w[] = ( (w_anode2500w[2..2] & w_data2322w[2..2]), (w_anode2500w[1..1] & w_data2322w[1..1]), (w_anode2500w[0..0] & w_data2322w[0..0]), w_anode2422w[1..1]);
	w_data2322w[2..0] = data_wire[2..0];
END;
--VALID FILE
