--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 10.1SP1 cbx_cycloneii 2011:01:19:21:13:40:SJ cbx_lpm_add_sub 2011:01:19:21:13:40:SJ cbx_lpm_compare 2011:01:19:21:13:40:SJ cbx_lpm_decode 2011:01:19:21:13:40:SJ cbx_mgl 2011:01:19:21:15:40:SJ cbx_stratix 2011:01:19:21:13:40:SJ cbx_stratixii 2011:01:19:21:13:40:SJ  VERSION_END


-- Copyright (C) 1991-2011 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1622w[1..0]	: WIRE;
	w_anode1631w[3..0]	: WIRE;
	w_anode1648w[3..0]	: WIRE;
	w_anode1658w[3..0]	: WIRE;
	w_anode1668w[3..0]	: WIRE;
	w_anode1678w[3..0]	: WIRE;
	w_anode1688w[3..0]	: WIRE;
	w_anode1698w[3..0]	: WIRE;
	w_anode1708w[3..0]	: WIRE;
	w_anode1720w[1..0]	: WIRE;
	w_anode1727w[3..0]	: WIRE;
	w_anode1738w[3..0]	: WIRE;
	w_anode1748w[3..0]	: WIRE;
	w_anode1758w[3..0]	: WIRE;
	w_anode1768w[3..0]	: WIRE;
	w_anode1778w[3..0]	: WIRE;
	w_anode1788w[3..0]	: WIRE;
	w_anode1798w[3..0]	: WIRE;
	w_data1620w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1798w[3..3], w_anode1788w[3..3], w_anode1778w[3..3], w_anode1768w[3..3], w_anode1758w[3..3], w_anode1748w[3..3], w_anode1738w[3..3], w_anode1727w[3..3]), ( w_anode1708w[3..3], w_anode1698w[3..3], w_anode1688w[3..3], w_anode1678w[3..3], w_anode1668w[3..3], w_anode1658w[3..3], w_anode1648w[3..3], w_anode1631w[3..3]));
	w_anode1622w[] = ( (w_anode1622w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1631w[] = ( (w_anode1631w[2..2] & (! w_data1620w[2..2])), (w_anode1631w[1..1] & (! w_data1620w[1..1])), (w_anode1631w[0..0] & (! w_data1620w[0..0])), w_anode1622w[1..1]);
	w_anode1648w[] = ( (w_anode1648w[2..2] & (! w_data1620w[2..2])), (w_anode1648w[1..1] & (! w_data1620w[1..1])), (w_anode1648w[0..0] & w_data1620w[0..0]), w_anode1622w[1..1]);
	w_anode1658w[] = ( (w_anode1658w[2..2] & (! w_data1620w[2..2])), (w_anode1658w[1..1] & w_data1620w[1..1]), (w_anode1658w[0..0] & (! w_data1620w[0..0])), w_anode1622w[1..1]);
	w_anode1668w[] = ( (w_anode1668w[2..2] & (! w_data1620w[2..2])), (w_anode1668w[1..1] & w_data1620w[1..1]), (w_anode1668w[0..0] & w_data1620w[0..0]), w_anode1622w[1..1]);
	w_anode1678w[] = ( (w_anode1678w[2..2] & w_data1620w[2..2]), (w_anode1678w[1..1] & (! w_data1620w[1..1])), (w_anode1678w[0..0] & (! w_data1620w[0..0])), w_anode1622w[1..1]);
	w_anode1688w[] = ( (w_anode1688w[2..2] & w_data1620w[2..2]), (w_anode1688w[1..1] & (! w_data1620w[1..1])), (w_anode1688w[0..0] & w_data1620w[0..0]), w_anode1622w[1..1]);
	w_anode1698w[] = ( (w_anode1698w[2..2] & w_data1620w[2..2]), (w_anode1698w[1..1] & w_data1620w[1..1]), (w_anode1698w[0..0] & (! w_data1620w[0..0])), w_anode1622w[1..1]);
	w_anode1708w[] = ( (w_anode1708w[2..2] & w_data1620w[2..2]), (w_anode1708w[1..1] & w_data1620w[1..1]), (w_anode1708w[0..0] & w_data1620w[0..0]), w_anode1622w[1..1]);
	w_anode1720w[] = ( (w_anode1720w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1727w[] = ( (w_anode1727w[2..2] & (! w_data1620w[2..2])), (w_anode1727w[1..1] & (! w_data1620w[1..1])), (w_anode1727w[0..0] & (! w_data1620w[0..0])), w_anode1720w[1..1]);
	w_anode1738w[] = ( (w_anode1738w[2..2] & (! w_data1620w[2..2])), (w_anode1738w[1..1] & (! w_data1620w[1..1])), (w_anode1738w[0..0] & w_data1620w[0..0]), w_anode1720w[1..1]);
	w_anode1748w[] = ( (w_anode1748w[2..2] & (! w_data1620w[2..2])), (w_anode1748w[1..1] & w_data1620w[1..1]), (w_anode1748w[0..0] & (! w_data1620w[0..0])), w_anode1720w[1..1]);
	w_anode1758w[] = ( (w_anode1758w[2..2] & (! w_data1620w[2..2])), (w_anode1758w[1..1] & w_data1620w[1..1]), (w_anode1758w[0..0] & w_data1620w[0..0]), w_anode1720w[1..1]);
	w_anode1768w[] = ( (w_anode1768w[2..2] & w_data1620w[2..2]), (w_anode1768w[1..1] & (! w_data1620w[1..1])), (w_anode1768w[0..0] & (! w_data1620w[0..0])), w_anode1720w[1..1]);
	w_anode1778w[] = ( (w_anode1778w[2..2] & w_data1620w[2..2]), (w_anode1778w[1..1] & (! w_data1620w[1..1])), (w_anode1778w[0..0] & w_data1620w[0..0]), w_anode1720w[1..1]);
	w_anode1788w[] = ( (w_anode1788w[2..2] & w_data1620w[2..2]), (w_anode1788w[1..1] & w_data1620w[1..1]), (w_anode1788w[0..0] & (! w_data1620w[0..0])), w_anode1720w[1..1]);
	w_anode1798w[] = ( (w_anode1798w[2..2] & w_data1620w[2..2]), (w_anode1798w[1..1] & w_data1620w[1..1]), (w_anode1798w[0..0] & w_data1620w[0..0]), w_anode1720w[1..1]);
	w_data1620w[2..0] = data_wire[2..0];
END;
--VALID FILE
